@using DNTPersianUtils.Core
@model ContentManagement.ViewModels.Areas.Manage.SlideViewModel
@{
    ViewData["Title"] = "ویرایش اسلاید";
}

<style>
    .custom-file-input ~ .custom-file-label::after {
        content: "انتخاب فایل";
    }
</style>

<h3>ویرایش اسلاید</h3>

<div class="container">
    <div class="alert alert-info" role="alert">
        توجه داشته باشید که سایز تصویر اسلاید می بایست @ContentManagement.Infrastructure.Constants.SlideWidthSize در @ContentManagement.Infrastructure.Constants.SlideHeightSize پیکسل باشد.
    </div>

    <form method="post" autocomplete="off" class="needs-validation" enctype="multipart/form-data" novalidate>
        @{ await Html.RenderPartialAsync("_CustomValidationSummary"); }

        @await Component.InvokeAsync(nameof(PortalsAndLanguages), new { portalId = Model.PortalId, language = Model.Language })

        <div class="form-group row">
            <label asp-for="Title" class="col-sm-2 form-control-label">عنوان</label>
            <div class="col-sm-10">
                <input type="text" class="form-control" asp-for="Title" placeholder="عنوان اسلاید">
                <span class="text-danger" asp-validation-for="Title"></span>
            </div>
        </div>
        <div class="form-group row">
            <label asp-for="SubTitle" class="col-sm-2 form-control-label">زیرعنوان</label>
            <div class="col-sm-10">
                <input type="text" class="form-control" asp-for="SubTitle" placeholder="زیرعنوان اسلاید">
                <span class="text-danger" asp-validation-for="SubTitle"></span>
            </div>
        </div>
        <div class="form-group row">
            <label asp-for="Url" class="col-sm-2 form-control-label">آدرس لینک</label>
            <div class="col-sm-10">
                <input type="text" class="form-control" dir="ltr" asp-for="Url" placeholder="آدرس لینک">
                <span class="text-danger" asp-validation-for="Url"></span>
            </div>
        </div>
        <div class="form-group row">
            <label asp-for="Priority" class="col-sm-2 form-control-label">اولویت</label>
            <div class="col-sm-10">
                <input type="number" class="form-control" asp-for="Priority" placeholder="اولویت قرارگیری">
                <span class="text-danger" asp-validation-for="Priority"></span>
            </div>
        </div>
        <div class="form-group row">
            <label asp-for="IsBlankUrlTarget" class="col-sm-2 form-control-label">نمایش در صفحه جدید؟</label>
            <div class="col-sm-10">
                <input type="checkbox" class="form-control" asp-for="IsBlankUrlTarget" style="width: 2%;">
                <span class="text-danger" asp-validation-for="IsBlankUrlTarget"></span>
            </div>
        </div>
        <div class="form-group row">
            <label asp-for="PublishDateText" class="col-sm-2 form-control-label">تاریخ انتشار(پیش فرض هم اکنون):</label>
            <div class="col-sm-10">
                <input type="text" class="form-control" id="PublishDateText" style="direction:ltr;" name="PublishDateText" placeholder="تاریخ انتشار(پیش فرض هم اکنون)">
                <div id="pdateselector" class="col-5"></div>
                <input type="hidden" id="currentPublishDateText" name="currentPublishDateText" value="@ViewBag.CurrentPublishDate" />
                <input type="hidden" id="hiddenPublishDateText" name="hiddenPublishDateText" />
                <span class="text-danger" asp-validation-for="PublishDateText"></span>
            </div>
        </div>
        <div class="form-group row">
            <label asp-for="ExpireDateText" class="col-sm-2 form-control-label">تاریخ انقضا:</label>
            <div class="col-sm-10">
                <input type="text" class="form-control" dir="ltr" id="ExpireDateText" name="ExpireDateText" placeholder="تاریخ انقضا">
                <div id="edateselector" class="col-5"></div>
                <input type="hidden" id="hiddenExpireDateText" name="hiddenExpireDateText" />
                <span class="text-danger" asp-validation-for="ExpireDateText"></span>
            </div>
        </div>
        <div class="form-group row" condition-class-mb-5="string.IsNullOrEmpty(Model.Filename)" condition-class-mb-0="!string.IsNullOrEmpty(Model.Filename)">
            <label asp-for="Image" class="col-sm-2 form-control-label">تصویر</label>
            <div class="col-sm-10 custom-file">
                <input type="file" class="custom-file-input" asp-for="Image" lang="fa">
                <label class="custom-file-label" asp-for="Image" style="margin-left: 15px; margin-right: 15px;">تصویر</label>
                <span class="text-danger" asp-validation-for="Image"></span>
            </div>
        </div>
        <container asp-if="!string.IsNullOrEmpty(Model.Filename)">
            <div class="form-group row mb-5">
                <label class="col-sm-2 form-control-label">&nbsp;</label>
                <div class="col-sm-10 custom-file">
                    <a href="/@ContentManagement.Infrastructure.Constants.SlidesRootPath/@Model.Filename" target="_blank">مشاهده تصویر فعلی</a>
                </div>
            </div>
        </container>
        <div class="form-group row">
            <label class="col-sm-2 form-control-label"></label>
            <div class="col-sm-10">
                <button class="btn btn-primary" type="submit">ذخیره</button>
                <a role="button" class="btn btn-secondary" href="/manage/slide/">بازگشت</a>
            </div>
        </div>
    </form>
</div>

@section scripts
    {
<script>
        $(document).ready(function () {
            @*var pd = $('#PublishDateText').persianDatepicker({
                format: 'YYYY/MM/DD HH:mm',
                timePicker: { enabled: true },
                initialValue: false,
                toolbox: {
                    calendarSwitch: { enabled: false }
                }
            });

            var ed = $('#ExpireDateText').persianDatepicker({
                format: 'YYYY/MM/DD HH:mm',
                timePicker: { enabled: true },
                initialValue: false,
                toolbox: {
                    calendarSwitch: { enabled: false }
                }
            });

            console.log('@(Model.PublishDate.ToUnixTimeSeconds())');
            console.log('@(Model.PublishDate)');*@

            $('#pdateselector').MdPersianDateTimePicker({ inLine: true, textFormat: "yyyy/M/d H:m", dateFormat: "yyyy/M/d H:m", enableTimePicker: true, targetTextSelector: "#PublishDateText", targetDateSelector: "#hiddenPublishDateText", englishNumber: true });
            $('#edateselector').MdPersianDateTimePicker({ inLine: true, textFormat: "yyyy/M/d H:m", dateFormat: "yyyy/M/d H:m", enableTimePicker: true, targetTextSelector: "#ExpireDateText", targetDateSelector: "#hiddenExpireDateText", englishNumber: true });

            @if(Model.PublishDate != null)
            {
                var publishDate = Model.PublishDate;
                @:$('#pdateselector').MdPersianDateTimePicker('setDate', new Date(@publishDate.Year, @(publishDate.Month - 1), @publishDate.Day, @publishDate.Hour, @publishDate.Minute, 0));
            }

            @if(Model.ExpireDate != null)
            {
                var expireDate = Model.ExpireDate;
                @:$('#edateselector').MdPersianDateTimePicker('setDate', new Date(@expireDate?.Year, @(expireDate?.Month - 1), @expireDate?.Day, @expireDate?.Hour, @expireDate?.Minute, 0));
            }
        });
</script>
}
