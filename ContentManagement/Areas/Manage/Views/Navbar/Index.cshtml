@{
    ViewData["Title"] = "مدیریت منوها";
    Layout = "~/Areas/Manage/Views/_Layout.cshtml";
}

<div class="m-3">
    <a class="btn btn-primary" role="button" href="/manage/navbar/add/">ایجاد منوی جدید</a>
</div>

@if (TempData["IsOk"] != null && (bool)TempData["IsOk"] == true)
{
    <div class="alert alert-success">
        <a href="#" class="close" data-dismiss="alert">×</a>
        <div>عملیات با موفقیت انجام شد.</div>
    </div>
}

<div class="card">
    <div class="card-header">
        منوها
    </div>
    <div class="card-body">
        <form>
            @await Component.InvokeAsync(nameof(PortalsAndLanguages))
        </form>
        <table class="table table-bordered table-sm table-hover" id="navbarsTable" style="width: 100%;">
            <thead class="thead-default">
                <tr>
                    <th>منو</th>
                    <th>منوی والد</th>
                    <th>آیکن</th>
                    <th>نمایش در صفحه جدید؟</th>
                    <th>اولویت</th>
                    <th>عملیات</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>

@section scripts{
    <script>
        var table;
        $(document).ready(function () {
            table = $('#navbarsTable').DataTable({
                language: {
                    "url": "/statics/Datatable.Persian.json"
                },
                ordering: false,
                paging: true,
                searching: true,
                processing: true,
                serverSide: true,
                stateSave: true,
                stateDuration: 0,
                searchDelay: null,
                ajax: {
                    url: '/manage/navbar/list/',
                    dataSrc: 'data',
                    type: "POST",
                    data: function (d) {
                        d.portalId = $('#PortalId').val();
                        d.language = $('#Language').val();
                    }
                },
                columnDefs: [
                    {
                        "targets": 0,
                        "data": null,
                        "render": function (data, type, row, meta) {
                            if (data.url) {
                                return '<a href="' + data.url + '" target="_blank" rel="noreferrer">' + data.text + '</a>';
                            }
                            else {
                                return '<span>' + data.text + '</span>';
                            }
                        }
                    },
                    {
                        "targets": 1,
                        "data": null,
                        "render": function (data, type, row, meta) {
                            if (data.parentText) {
                                if (data.parentUrl) {
                                    return '<a href="' + data.parentUrl + '" target="_blank" rel="noreferrer">' + data.parentText + '</a>';
                                }
                                else {
                                    return '<span>' + data.parentText + '</span>';
                                }
                            }
                            else {
                                return '';
                            }
                        }
                    },
                    {
                        "className": "text-center",
                        "width": "4%",
                        "targets": 2,
                        "data": "icon",
                        "render": function (data, type, row, meta) {
                            if (data) {
                                return '<i class="' + data + '"></i>';
                            }
                            return '';
                        }
                    },
                    {
                        "className": "text-center",
                        "width": "15%",
                        "targets": 3,
                        "data": "isBlankUrlTarget",
                        "render": function (data, type, row, meta) {
                            if (data) {
                                return '<span>بله</span>';
                            }
                            return '<span>خیر</span>';
                        }
                    },
                    {
                        "className": "text-center",
                        "width": "8%",
                        "targets": 4,
                        "data": "priority",
                        "render": function (data, type, row, meta) {
                            if (data) {
                                return '<span>' + data + '</span>';
                            }
                            return '';
                        }
                    },
                    {
                        "width": "4%",
                        "targets": 5,
                        "data": "id",
                        "render": function (data, type, row, meta) {
                            return '<a href="/manage/navbar/update/' + data + '/" title="ویرایش"><i class="fa fa-edit fa-lg"></i></a>&nbsp|&nbsp;<a href="#" data-role="delete-navbar" title="حذف" data-id="' + data + '"><i class="far fa-trash-alt fa-lg"></i></a>';
                        }
                    }]
            });

            $('#navbarsTable tbody').on('click', 'a[data-role="delete-navbar"]', function () {
                var row = table.row($(this).parents('tr'));
                var data = row.data();

                swal.fire({
                    title: 'آیا از انجام این کار اطمینان دارید؟',
                    text: "این عملیات غیرقابل بازگشت می باشد!",
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'بله!',
                    cancelButtonText: 'خیر',
                    focusCancel: true,
                    focusConfirm: false
                }).then((result) => {
                    if (result.value) {
                        axios.post('/manage/navbar/delete/' + data.id + '/')
                            .then(function (response) {
                                row.remove().draw();
                                swal.fire({
                                    title: 'انجام شد!',
                                    text: response.data,
                                    type: 'success',
                                    confirmButtonText: 'بستن',
                                })
                            })
                            .catch(function (error) {
                                swal.fire({
                                    title: 'خطا!',
                                    text: 'عملیات با خطا مواجه گشت.',
                                    type: 'error',
                                    confirmButtonText: 'بستن',
                                })
                            });
                    }
                })
            });

            $('#PortalId, #Language').on('change', function () {
                table.ajax.reload(null, false); // user paging is not reset on reload
            });
        });
    </script>
}
